HTable Module

Elena-Ramona Modroiu

   asipto.com
   <ramona@rosdev.ro>

Edited by

Elena-Ramona Modroiu

   <ramona@rosdev.ro>

   Copyright © 2008 http://www.asipto.com
     __________________________________________________________

   Table of Contents

   1. Admin Guide

        1.1. Overview
        1.2. Dependencies

              1.2.1. Kamailio Modules
              1.2.2. External Libraries or Applications

        1.3. Exported Parameters

              1.3.1. hash_size (integer)

        1.4. Exported Functions

              1.4.1. sht_print()

        1.5. Exported pseudo-variables

              1.5.1. $sht(name)

   List of Examples

   1.1. Accessing $sht(name)
   1.2. Dictionary attack limitation
   1.3. Set hash_size parameter
   1.4. sht_print usage
   1.5. $sht(name) usage

Chapter 1. Admin Guide

1.1. Overview

   The module adds a hash table container to configuration
   language. The hash table is stored in shared memory and the
   access to it can be done via pseudo-variables: $sht(name).

   The "name" can be a static string or can include pseudo-
   variables that will be replaced at runtime.

   Example 1.1. Accessing $sht(name)
...
$sht(test) = 1;
$sht($ci::srcip) = $si;
...

   Next example shows a way to protect against dictionary attacks.
   If someone fails to authenticate 3 times, it is forbidden for
   15min. Authenticatin against database is expensive as it does a
   select on subscriber table. By disabling the DB auth for 15min,
   resources on server as saved and time to discover the password
   is increased substantially. Additional alerting can be done by
   writing a message to syslog or sending email, etc.

   To implement the logic, two hash table variables are user: one
   counting the failed authentications per user and one for
   storing the time of last authentication attempt. To ensure
   unique name per user, the hash table uses a combination of
   authentication username and text "::auth_count" and
   "::last_auth".

   Example 1.2. Dictionary attack limitation
...
if(is_present_hf("Authorization"))
{
        if($sht($au::auth_count)==3)
        {
                if($sht($au::last_auth) > $Ts-900)
                {
                        sl_send_reply("403", "Try later");
                        exit;
                } else {
                        $sht($au::auth_count) = 0;
                }
        }
        if(!www_authorize(""))
        {
                if($sht($au::auth_count) == null)
                        $sht($au::auth_count) = 0;
                $sht($au::auth_count) = $sht($au::auth_count) + 1;
                if($sht($au::auth_count) == 3)
                        xlog("auth failed 3rd time - src ip: $si\n");
                $sht($au::last_auth) = $Ts;
                www_challenge(""/*realm*/,"0"/*qop*/);
                exit;
        }
        $sht($au::auth_count) = 0;
} else {
        www_challenge("","0");
        exit;
}
...

1.2. Dependencies

1.2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * No dependencies on other Kamailio modules.

1.2.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running Kamailio with this module loaded:
     * None.

1.3. Exported Parameters

1.3.1. hash_size (integer)

   The hash table will be build with 2^hash_size entries.

   Default value is 6. Max value is 14.

   Example 1.3. Set hash_size parameter
...
modparam("htable", "hash_size", 10)
...

1.4. Exported Functions

1.4.1.  sht_print()

   Dump content of hash table to L_ERR log level. Intended for
   debug purposes.

   This function can be used from REQUEST_ROUTE, FAILURE_ROUTE,
   ONREPLY_ROUTE, BRANCH_ROUTE.

   Example 1.4. sht_print usage
...
sht_print();
...

1.5. Exported pseudo-variables

1.5.1. $sht(name)

   Access hash table entries.

   The "name" can be:
     * static string - set of characters without pseudo-variables
     * dynamic string - set of characters that include
       pseudo-variables. The pseudo-variables will be evaluated at
       runtime.

   Example 1.5. $sht(name) usage
...
$sht($au) = 1;
$sht($ru) = $fu;
...
