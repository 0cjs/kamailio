1. Counters Module

Andrei Pelinescu-Onciul

   iptelorg GmbH

   Copyright © 2010 iptelorg GmbH
   Revision History
   Revision $Revision$ $Date$
     __________________________________________________________________

   1.1. Overview
   1.2. Parameters

        1.2.1. script_counter
        1.2.2. script_cnt_grp_name

   1.3. Functions

        1.3.1. cnt_inc(name)
        1.3.2. cnt_add(name, number)
        1.3.3. cnt_reset(name)

   1.4. counters RPC Functions

        1.4.1. cnt.get group counter_name
        1.4.2. cnt.reset group counter_name
        1.4.3. cnt.grps_list
        1.4.4. cnt.var_list group
        1.4.5. cnt.grp_get_all

1.1. Overview

   This module exports counters/statistics manipulating script functions
   and RPCs.

1.2. Parameters

   Revision History
   Revision $Revision$ $Date$

1.2.1. script_counter

   Define a new counter that can be used from the script. The default
   group name for the counter is "script" (it can be changed using the
   script_cnt_grp_name module parameter).

   Example 1.  Create a new script_counter
modparam("counters", "script_counter", "foo")

1.2.2. script_cnt_grp_name

   Group name that will be used for all the counters defined via the
   script_counter module parameter.

   Default: "script".

   Example 2.  Set script_cnt_grp_name in the config file
modparam("counters", "script_cnt_grp_name", "my_counters")

1.3. Functions

   Revision History
   Revision $Revision$ $Date$

1.3.1.  cnt_inc(name)

   Increments the counter name. The counter must be defined using the
   script_counter module parameter.

   Example 3. cnt_inc usage
...
modparam("counters", "script_counter", "reqs")
...
route {
        cnt_inc("reqs");
...
}

1.3.2.  cnt_add(name, number)

   Adds number the counter name. The counter must be defined using the
   script_counter module parameter.

   Example 4. cnt_add usage
...
modparam("counters", "script_counter", "reqs10")
...
route {
        cnt_add("reqs10", 10);
...
}

1.3.3.  cnt_reset(name)

   Resets the counter name. The counter must be defined using the
   script_counter module parameter.

   Example 5. cnt_reset usage
...
modparam("counters", "script_counter", "reqs")
...
route {
        if (...)
                cnt_reset("reqs");
...
}

1.4. counters RPC Functions

   Revision History
   Revision $Revision$ $Date$

1.4.1.  cnt.get group counter_name

   Get the value of the counter identified by group.counter_name.

   Example 6. cnt.get grp counter_name usage
 $ sercmd cnt.get script foo

1.4.2.  cnt.reset group counter_name

   Resets the counter identified by group.counter_name.

   Example 7. cnt.reset grp name usage
 $ sercmd cnt.reset script foo

1.4.3.  cnt.grps_list

   Lists all the declared counter groups.

   Example 8. cnt.grps_list usage
 $ sercmd cnt.grps_list

1.4.4.  cnt.var_list group

   Lists all the names of all the counters belonging to the specified
   group.

   Example 9. cnt.var_list group usage
 $ sercmd cnt.var_list script

1.4.5.  cnt.grp_get_all

   Lists all the counter names and their values in the specified group.

   Example 10. cnt.var_list group usage
 $ sercmd cnt.grp_get_all script
