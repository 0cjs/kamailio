mqueue Module

Elena-Ramona Modroiu

   asipto.com

Edited by

Elena-Ramona Modroiu

   <ramona@asipto.com>

   Copyright © 2010 Elena-Ramona Modroiu (asipto.com)
     __________________________________________________________________

   Table of Contents

   1. Admin Guide

        1.1. Overview
        1.2. Dependencies

              1.2.1. Kamailio Modules
              1.2.2. External Libraries or Applications

        1.3. Exported Parameters

              1.3.1. mqueue (string)

        1.4. Exported Functions

              1.4.1. mq_add(queue, key, value)
              1.4.2. mq_fetch(queue)
              1.4.3. mq_pv(queue)

   List of Examples

   1.1. Set mqueue parameter
   1.2. mq_add usage
   1.3. mq_fetch usage
   1.4. mq_pv_free usage

Chapter 1. Admin Guide

1.1. Overview

   This module offers generic message queue system in shared memory for
   inter-process communication via config file. One example of usage is to
   send time consuming operations to a timer process that consumes items
   in the queue, without affecting SIP message handling.

   There can be defined many queues, access to values being done via
   pseudo variables.

1.2. Dependencies

1.2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * None.

1.2.2. External Libraries or Applications

   The following libraries or applications must be installed before
   running Kamailio with this module loaded:
     * None.

1.3. Exported Parameters

1.3.1. mqueue (string)

   Definition of memory queue

   Default value is "none".

   Value must be a list of parameters: attr=value;... The attribute 'name'
   is mandatory, defining the name of the queue. Optional attribute 'size'
   specifies the maximum number of items in queue, if it is execeeded the
   oldest one is removed.

   The parameter can be set many time, each holding the definition of one
   queue.

   Example 1.1. Set mqueue parameter
...
modparam("mqueue", "mqueue", "name=myq;size=20;")
modparam("mqueue", "mqueue", "name=qaz")
...

1.4. Exported Functions

1.4.1.  mq_add(queue, key, value)

   Add a new item (key, value) in the queue. If max size of queue is
   exceeded, the oldest one is removed.

   Example 1.2. mq_add usage
...
mq_add("myq", "$rU", "call from $fU");
...

1.4.2.  mq_fetch(queue)

   Take oldest item from que and fill $mqk(queue) and $mqv(queue) pseudo
   variables. Return true on success.

   Example 1.3. mq_fetch usage
...
while(mq_add("myq"))
{
   xlog("$mqk(myq) - $mqv(myq)\n");
}
...

1.4.3.  mq_pv(queue)

   Free the item fetched in pseudo-variables. It is optional, a new fetch
   frees the old values.

   Example 1.4. mq_pv_free usage
...
mq_pv_free("myq");
...
