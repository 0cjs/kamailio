mtree Module

Daniel-Constantin Mierla

   asipto.com

Edited by

Daniel-Constantin Mierla

   <miconda@gmail.com>

   Copyright © 2010 Daniel-Constantin Mierla (asipto.com)
     __________________________________________________________________

   Table of Contents

   1. Admin Guide

        1. Overview
        2. Dependencies

              2.1. Kamailio Modules
              2.2. External Libraries or Applications

        3. Exported Parameters

              3.1. db_url (string)
              3.2. mtree (string)
              3.3. tprefix_column (string)
              3.4. tvalue_column (string)
              3.5. fetch_rows (integer)
              3.6. char_list (string)
              3.7. pv_value (string)

        4. Exported Functions

              4.1. mt_match(mtree, pv, mode)

        5. Exported MI Functions

              5.1. mt_list
              5.2. mt_reload

   List of Examples

   1.1. Set db_url parameter
   1.2. Set mtree parameter
   1.3. Set prefix_column parameter
   1.4. Set tvalue_column parameter
   1.5. Set fetch_rows parameter
   1.6. Set char_list parameter
   1.7. Set pv_value parameter
   1.8. mt_match usage

Chapter 1. Admin Guide

   Table of Contents

   1. Overview
   2. Dependencies

        2.1. Kamailio Modules
        2.2. External Libraries or Applications

   3. Exported Parameters

        3.1. db_url (string)
        3.2. mtree (string)
        3.3. tprefix_column (string)
        3.4. tvalue_column (string)
        3.5. fetch_rows (integer)
        3.6. char_list (string)
        3.7. pv_value (string)

   4. Exported Functions

        4.1. mt_match(mtree, pv, mode)

   5. Exported MI Functions

        5.1. mt_list
        5.2. mt_reload

1. Overview

   This module loads data indexed by prefixes from database and returns
   associated string or precompiled value.

2. Dependencies

   2.1. Kamailio Modules
   2.2. External Libraries or Applications

2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * A Kamailio database module (e.g., mysql).

2.2. External Libraries or Applications

   The following libraries or applications must be installed before
   running Kamailio with this module loaded:
     * None.

3. Exported Parameters

   3.1. db_url (string)
   3.2. mtree (string)
   3.3. tprefix_column (string)
   3.4. tvalue_column (string)
   3.5. fetch_rows (integer)
   3.6. char_list (string)
   3.7. pv_value (string)

3.1. db_url (string)

   URL of the database server to be used.

   Default value is "mysql://openser:openserrw@localhost/openser".

   Example 1.1. Set db_url parameter
...
modparam("mtree", "db_url", "dbdriver://username:password@dbhost/dbname")
...

3.2. mtree (string)

   Definition of memory tree

   Default value is "none".

   Example 1.2. Set mtree parameter
...
modparam("mtree", "mtree", "name=mytable;dbtable=routes;type=0;")
...

3.3. tprefix_column (string)

   Name of 'tprefix' column.

   Default value is "tprefix".

   Example 1.3. Set prefix_column parameter
...
modparam("mtree", "tprefix_column", "prefix")
...

3.4. tvalue_column (string)

   Name of 'tvalue' column.

   Default value is "tvalue".

   Example 1.4. Set tvalue_column parameter
...
modparam("mtree", "tvalue_column", "ipaddr")
...

3.5. fetch_rows (integer)

   Number of rows to be loaded in one step from database.

   Default value is 1000.

   Example 1.5. Set fetch_rows parameter
...
modparam("mtree", "fetch_rows", 4000)
...

3.6. char_list (string)

   The list with characters allowed in prefix.

   Default value is "0123456789".

   Example 1.6. Set char_list parameter
...
modparam("mtree", "char_list", "0123456789*+")
...

3.7. pv_value (string)

   The PV spec where to store the matched value. It can be any writtable
   PV.

   Default value is "$avp(s:tvalue)".

   Example 1.7. Set pv_value parameter
...
modparam("mtree", "pv_value", "$var(mtval)")
...

4. Exported Functions

   4.1. mt_match(mtree, pv, mode)

4.1.  mt_match(mtree, pv, mode)

   Match 'pv' value against mtree. mode is reserved for further use, now
   set any integer or PV.

   Example 1.8. mt_match usage
...
mt_match("mytree", "$rU", "0");
...

5. Exported MI Functions

   5.1. mt_list
   5.2. mt_reload

5.1.  mt_list

   List content of a tree.

   Name: mt_list

   Parameters:
     * _mtree_ : name of tree to list.

   MI FIFO Command Format:
                :mt_list:_reply_fifo_file_
                _mtname_
                _empty_line_

5.2.  mt_reload

   Reload mtree from database.

   Name: mt_mtree

   Parameters:
     * _mtname_
       - name of mem tree

   MI FIFO Command Format:
                :mt_reload:_reply_fifo_file_
                _mtname_
                _empty_line_
